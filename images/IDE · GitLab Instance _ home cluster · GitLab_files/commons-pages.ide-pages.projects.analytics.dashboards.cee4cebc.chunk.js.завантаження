(this.webpackJsonp=this.webpackJsonp||[]).push([[225],{"+lve":function(e,n,i){"use strict";i.d(n,"g",(function(){return r})),i.d(n,"e",(function(){return d})),i.d(n,"a",(function(){return s})),i.d(n,"c",(function(){return l})),i.d(n,"d",(function(){return u})),i.d(n,"b",(function(){return c})),i.d(n,"f",(function(){return m}));var t=i("mABg"),a=i.n(t);i("g+EE"),i("h8Et"),i("uHfJ"),i("R0RX");const r=function(e){return!("string"!=typeof e||!e.startsWith("gid://gitlab/"))},o=function(e){return parseInt((""+e).replace(/gid:\/\/gitlab\/.*\//g,""),10)},d=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const n=o(e);return Number.isInteger(n)?n:null},s={Append:"APPEND",Remove:"REMOVE",Replace:"REPLACE"},l=function(e,n){if("string"!=typeof e)throw new TypeError("type must be a string; got "+typeof e);if(!["number","string"].includes(typeof n))throw new TypeError("id must be a number or string; got "+typeof n);return r(n)?n:`gid://gitlab/${e}/${n}`},u=function(e,n){return n.map((function(n){return l(e,n)}))},c=function(e){if(!a()(e))throw new TypeError("nodes must be an array; got "+typeof e);return e.map((function(e){return e.id?{...e,id:d(e.id)}:e}))},m=function(e){var n;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"nodes";return null!==(n=null==e?void 0:e[i])&&void 0!==n?n:[]}},Ml5J:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"dismissUserCallout"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserCalloutCreateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userCalloutCreate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userCallout"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"dismissedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"featureName"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:177}};i.loc.source={body:"mutation dismissUserCallout($input: UserCalloutCreateInput!) {\n  userCalloutCreate(input: $input) {\n    errors\n    userCallout {\n      dismissedAt\n      featureName\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.dismissUserCallout=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,o=new Set,d=new Set;for(r.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(t[e]||new Set).forEach((function(e){d.add(e)})))}))}return o.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"dismissUserCallout")},QslC:function(e,n,i){"use strict";i.d(n,"a",(function(){return s}));var t=i("vZRN"),a=i.n(t);let r=null;const o=(e,n)=>{if(!a()(n))throw TypeError("directive value must be a function");r||(r=new ResizeObserver(e=>{e.forEach(e=>{e.target.glResizeHandler(e)})})),e.glResizeHandler=n,r.observe(e)},d=e=>{var n;e.glResizeHandler&&(delete e.glResizeHandler,null===(n=r)||void 0===n||n.unobserve(e))},s={bind(e,n){let{value:i,arg:t=!0}=n;t&&o(e,i)},update(e,n){let{value:i,arg:t=!0}=n;t?o(e,i):d(e)},unbind:d}},XIoT:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"IdeProject"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Project"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userPermissions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createMergeRequestIn"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"readMergeRequest"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pushCode"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:123}};i.loc.source={body:"fragment IdeProject on Project {\n  id\n  userPermissions {\n    createMergeRequestIn\n    readMergeRequest\n    pushCode\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.IdeProject=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,o=new Set,d=new Set;for(r.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(t[e]||new Set).forEach((function(e){d.add(e)})))}))}return o.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"IdeProject")},hrJT:function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getIdeProjectEE"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"IdeProject"},directives:[]},{kind:"Field",name:{kind:"Name",value:"pushRules"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rejectUnsignedCommits"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:207}};t.loc.source={body:'#import "~/ide/queries/ide_project.fragment.graphql"\n\nquery getIdeProjectEE($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    ...IdeProject\n    pushRules {\n      rejectUnsignedCommits\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("XIoT").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.getIdeProjectEE=function(e,n){var i={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,d=new Set;for(t.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return a.forEach((function(n){var t=o(e,n);t&&i.definitions.push(t)})),i}(t,"getIdeProjectEE")},l7eV:function(e,n,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getCiConfigData"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"sha"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"content"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ciConfig"},arguments:[{kind:"Argument",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"Argument",name:{kind:"Name",value:"sha"},value:{kind:"Variable",name:{kind:"Name",value:"sha"}}},{kind:"Argument",name:{kind:"Name",value:"content"},value:{kind:"Variable",name:{kind:"Name",value:"content"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"includes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"location"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"blob"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"raw"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"mergedYaml"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"stages"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"PipelineStagesConnection"},directives:[]}]}}]}}]}}],loc:{start:0,end:395}};t.loc.source={body:'#import "~/pipelines/graphql/fragments/pipeline_stages_connection.fragment.graphql"\n\nquery getCiConfigData($projectPath: ID!, $sha: String, $content: String!) {\n  ciConfig(projectPath: $projectPath, sha: $sha, content: $content) {\n    errors\n    includes {\n      location\n      type\n      blob\n      raw\n    }\n    mergedYaml\n    status\n    stages {\n      ...PipelineStagesConnection\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};t.definitions=t.definitions.concat(i("l7kz").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!a[n]&&(a[n]=!0,!0)})));var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.getCiConfigData=function(e,n){var i={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var t=r[n]||new Set,a=new Set,d=new Set;for(t.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){d.add(e)})))}))}return a.forEach((function(n){var t=o(e,n);t&&i.definitions.push(t)})),i}(t,"getCiConfigData")},l7kz:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"PipelineStagesConnection"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"CiConfigStageConnection"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"groups"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"size"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"jobs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"script"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"beforeScript"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"afterScript"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"environment"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allowFailure"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tags"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"when"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"only"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"refs"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"except"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"refs"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"needs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:577}};i.loc.source={body:"fragment PipelineStagesConnection on CiConfigStageConnection {\n  nodes {\n    name\n    groups {\n      nodes {\n        name\n        size\n        jobs {\n          nodes {\n            name\n            script\n            beforeScript\n            afterScript\n            environment\n            allowFailure\n            tags\n            when\n            only {\n              refs\n            }\n            except {\n              refs\n            }\n            needs {\n              nodes {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,n){for(var i=0;i<e.definitions.length;i++){var t=e.definitions[i];if(t.name&&t.name.value==n)return t}}i.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,i){if("FragmentSpread"===n.kind)i.add(n.name.value);else if("VariableDefinition"===n.kind){var t=n.type;"NamedType"===t.kind&&i.add(t.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,i)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,i)})),n.definitions&&n.definitions.forEach((function(n){e(n,i)}))}(e,n),t[e.name.value]=n}})),e.exports=i,e.exports.PipelineStagesConnection=function(e,n){var i={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=t[n]||new Set,o=new Set,d=new Set;for(r.forEach((function(e){d.add(e)}));d.size>0;){var s=d;d=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(t[e]||new Set).forEach((function(e){d.add(e)})))}))}return o.forEach((function(n){var t=a(e,n);t&&i.definitions.push(t)})),i}(i,"PipelineStagesConnection")},lGoD:function(e,n,i){"use strict";var t=i("htOw"),a=i("hrJT"),r=i.n(a),o=i("Ml5J"),d=i.n(o),s=i("+lve"),l=i("mphk"),u=i("yYHy"),c=i("l7eV"),m=i.n(c),f=i("odYa"),v=i.n(f),k=i("voi4");const g=v()((function(){return Object(k.a)({},{fetchPolicy:k.b.NO_CACHE})})),p=function(){return g().query(...arguments)};n.a={getFileData:e=>l.a.get(e,{params:{format:"json",viewer:"none"}}),getRawFileData(e){if(e.tempFile&&!e.prevPath)return Promise.resolve(e.content);if(e.raw||!e.rawPath)return Promise.resolve(e.raw);const n=e.binary?{responseType:"arraybuffer"}:{};return l.a.get(e.rawPath,{transformResponse:[function(e){return e}],...n}).then((function(e){let{data:n}=e;return n}))},getBaseRawFileData(e,n,i){if(e.tempFile||e.baseRaw)return Promise.resolve(e.baseRaw);const t=e.mrChange&&e.mrChange.renamed_file?e.mrChange.old_path:e.path;return l.a.get(Object(u.y)(gon.relative_url_root||"/",n,"-","raw",i,Object(u.i)(t)),{transformResponse:[function(e){return e}]}).then((function(e){let{data:n}=e;return n}))},getProjectMergeRequests(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.b.projectMergeRequests(e,n)},getProjectMergeRequestData(e,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return t.b.projectMergeRequest(e,n,i)},getProjectMergeRequestChanges:(e,n)=>t.b.projectMergeRequestChanges(e,n),getProjectMergeRequestVersions:(e,n)=>t.b.projectMergeRequestVersions(e,n),getBranchData:(e,n)=>t.b.branchSingle(e,n),commit:(e,n)=>t.b.commitMultiple(e,n),getFiles(e,n){const i=`${gon.relative_url_root}/${e}/-/files/${n}`;return l.a.get(i,{params:{format:"json"}})},lastCommitPipelines(e){let{getters:n}=e;const i=n.lastCommit.id;return t.b.commitPipelines(n.currentProject.path_with_namespace,i)},pingUsage(e){const n=`${gon.relative_url_root}/${e}/service_ping/web_ide_pipelines_count`;return l.a.post(n)},getCiConfig:(e,n)=>p({query:m.a,variables:{projectPath:e,content:n}}).then((function(e){let{data:n}=e;return n.ciConfig})),dismissUserCallout:e=>function(){return g().mutate(...arguments)}({mutation:d.a,variables:{input:{featureName:e}}}).then((function(e){let{data:n}=e;return n})),getProjectPermissionsData:e=>p({query:r.a,variables:{projectPath:e}}).then((function(e){let{data:n}=e;return{...n.project,id:Object(s.e)(n.project.id)}}))}},oiT5:function(e,n,i){"use strict";i.d(n,"a",(function(){return t})),i.d(n,"k",(function(){return a})),i.d(n,"e",(function(){return r})),i.d(n,"b",(function(){return o})),i.d(n,"j",(function(){return d})),i.d(n,"c",(function(){return s})),i.d(n,"o",(function(){return l})),i.d(n,"f",(function(){return u})),i.d(n,"i",(function(){return c})),i.d(n,"d",(function(){return m})),i.d(n,"g",(function(){return f})),i.d(n,"l",(function(){return v})),i.d(n,"p",(function(){return k})),i.d(n,"n",(function(){return g})),i.d(n,"h",(function(){return p})),i.d(n,"m",(function(){return h})),i.d(n,"q",(function(){return S}));const t=0,a=200,r=201,o=202,d=204,s=400,l=401,u=403,c=404,m=409,f=410,v=413,k=422,g=429,p=500,h=503,S=[a,r,o,203,d,205,206,207,208,226]}}]);
//# sourceMappingURL=commons-pages.ide-pages.projects.analytics.dashboards.cee4cebc.chunk.js.map